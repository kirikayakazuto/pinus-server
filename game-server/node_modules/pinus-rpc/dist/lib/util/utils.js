"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function invokeCallback(cb, err) {
    if (typeof cb === 'function') {
        cb.apply(null, Array.prototype.slice.call(arguments, 1));
    }
}
exports.invokeCallback = invokeCallback;
function applyCallback(cb, args) {
    if (typeof cb === 'function') {
        cb.apply(null, args);
    }
}
exports.applyCallback = applyCallback;
function getObjectClass(obj) {
    if (!obj) {
        return;
    }
    let constructor = obj.constructor;
    if (!constructor) {
        return;
    }
    if (constructor.name) {
        return constructor.name;
    }
    let str = constructor.toString();
    if (!str) {
        return;
    }
    let arr = null;
    if (str.charAt(0) === '[') {
        arr = str.match(/\[\w+\s*(\w+)\]/);
    }
    else {
        arr = str.match(/function\s*(\w+)/);
    }
    if (arr && arr.length === 2) {
        return arr[1];
    }
}
exports.getObjectClass = getObjectClass;
/**
 * Utils check float
 *
 * @param  {Float}   float
 * @return {Boolean} true|false
 * @api public
 */
function checkFloat(v) {
    return v === Number(v) && v % 1 !== 0;
    // return parseInt(v) !== v;
}
exports.checkFloat = checkFloat;
/**
 * Utils check type
 *
 * @param  {String}   type
 * @return {Function} high order function
 * @api public
 */
function isType(type) {
    return function (obj) {
        return {}.toString.call(obj) === '[object ' + type + ']';
    };
}
exports.isType = isType;
/**
 * Utils check array
 *
 * @param  {Array}   array
 * @return {Boolean} true|false
 * @api public
 */
exports.checkArray = Array.isArray || isType('Array');
/**
 * Utils check number
 *
 * @param  {Number}  number
 * @return {Boolean} true|false
 * @api public
 */
exports.checkNumber = isType('Number');
/**
 * Utils check function
 *
 * @param  {Function}   func function
 * @return {Boolean}    true|false
 * @api public
 */
exports.checkFunction = isType('Function');
/**
 * Utils check object
 *
 * @param  {Object}   obj object
 * @return {Boolean}  true|false
 * @api public
 */
exports.checkObject = isType('Object');
/**
 * Utils check string
 *
 * @param  {String}   string
 * @return {Boolean}  true|false
 * @api public
 */
exports.checkString = isType('String');
/**
 * Utils check boolean
 *
 * @param  {Object}   obj object
 * @return {Boolean}  true|false
 * @api public
 */
exports.checkBoolean = isType('Boolean');
/**
 * Utils check bean
 *
 * @param  {Object}   obj object
 * @return {Boolean}  true|false
 * @api public
 */
exports.checkBean = function (obj) {
    return obj && obj['$id'] &&
        exports.checkFunction(obj['writeFields']) &&
        exports.checkFunction(obj['readFields']);
};
exports.checkNull = function (obj) {
    return !exports.isNotNull(obj);
};
/**
 * Utils args to array
 *
 * @param  {Object}  args arguments
 * @return {Array}   array
 * @api public
 */
exports.to_array = function (args) {
    let len = args.length;
    let arr = new Array(len);
    for (let i = 0; i < len; i++) {
        arr[i] = args[i];
    }
    return arr;
};
/**
 * Utils check is not null
 *
 * @param  {Object}   value
 * @return {Boolean}  true|false
 * @api public
 */
exports.isNotNull = function (value) {
    if (value !== null && typeof value !== 'undefined')
        return true;
    return false;
};
exports.getType = function (object) {
    if (object == null || typeof object === 'undefined') {
        return exports.typeMap['null'];
    }
    if (Buffer.isBuffer(object)) {
        return exports.typeMap['buffer'];
    }
    if (exports.checkArray(object)) {
        return exports.typeMap['array'];
    }
    if (exports.checkString(object)) {
        return exports.typeMap['string'];
    }
    if (exports.checkObject(object)) {
        if (exports.checkBean(object)) {
            return exports.typeMap['bean'];
        }
        return exports.typeMap['object'];
    }
    if (exports.checkBoolean(object)) {
        return exports.typeMap['boolean'];
    }
    if (exports.checkNumber(object)) {
        if (checkFloat(object)) {
            return exports.typeMap['float'];
        }
        if (isNaN(object)) {
            return exports.typeMap['null'];
        }
        return exports.typeMap['number'];
    }
};
exports.typeArray = ['', 'null', 'buffer', 'array', 'string', 'object', 'bean', 'boolean', 'float', 'number'];
exports.typeMap = {};
for (let i = 1; i <= exports.typeArray.length; i++) {
    exports.typeMap[exports.typeArray[i]] = i;
}
exports.getBearcat = function () {
    return require('bearcat');
};
/**
 * 列出ES6的一个Class实例上的所有方法，但不包括父类的
 * @param objInstance
 */
function listEs6ClassMethods(objInstance) {
    if (objInstance.prototype && objInstance.prototype.constructor === objInstance) {
        let names = [];
        let methodNames = Object.getOwnPropertyNames(objInstance.prototype);
        for (let name of methodNames) {
            let method = objInstance.prototype[name];
            // Supposedly you'd like to skip constructor
            if (!(method instanceof Function) || name === 'constructor')
                continue;
            names.push(name);
        }
        return names;
    }
    else {
        let names = [];
        let methodNames = Object.getOwnPropertyNames(Object.getPrototypeOf(objInstance)).concat(Object.getOwnPropertyNames(objInstance));
        for (let name of methodNames) {
            let method = objInstance[name];
            // Supposedly you'd like to skip constructor
            if (!(method instanceof Function) || name === 'constructor')
                continue;
            names.push(name);
        }
        return names;
    }
}
exports.listEs6ClassMethods = listEs6ClassMethods;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvdXRpbC91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHdCQUErQixFQUFZLEVBQUUsR0FBVTtJQUNuRCxJQUFJLE9BQU8sRUFBRSxLQUFLLFVBQVUsRUFBRTtRQUMxQixFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDNUQ7QUFDTCxDQUFDO0FBSkQsd0NBSUM7QUFFRCx1QkFBOEIsRUFBWSxFQUFFLElBQVc7SUFDbkQsSUFBSSxPQUFPLEVBQUUsS0FBSyxVQUFVLEVBQUU7UUFDMUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDeEI7QUFDTCxDQUFDO0FBSkQsc0NBSUM7QUFFRCx3QkFBK0IsR0FBVztJQUN0QyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ04sT0FBTztLQUNWO0lBRUQsSUFBSSxXQUFXLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQztJQUNsQyxJQUFJLENBQUMsV0FBVyxFQUFFO1FBQ2QsT0FBTztLQUNWO0lBRUQsSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFO1FBQ2xCLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQztLQUMzQjtJQUVELElBQUksR0FBRyxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNqQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ04sT0FBTztLQUNWO0lBRUQsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBQ2YsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRTtRQUN2QixHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0tBQ3RDO1NBQU07UUFDSCxHQUFH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