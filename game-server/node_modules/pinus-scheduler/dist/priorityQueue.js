"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The PriorityQeueu class
 */
class PriorityQueue {
    constructor(comparator) {
        this._defaultComparator = function (a, b) {
            return a > b;
        };
        this.init(comparator);
    }
    init(comparator) {
        this._comparator = typeof (comparator) === 'function' ? comparator : this._defaultComparator;
        this._queue = [];
        this._tailPos = 0;
    }
    /**
     * Return the size of the pirority queue
     * @return PirorityQueue size
     */
    size() {
        return this._tailPos;
    }
    /**
     * Insert an element to the queue
     * @param element The element to insert
     */
    offer(element) {
        let queue = this._queue;
        let compare = this._comparator;
        queue[this._tailPos++] = element;
        let pos = this._tailPos - 1;
        while (pos > 0) {
            let parentPos = (pos % 2 === 0) ? (pos / 2 - 1) : (pos - 1) / 2;
            if (compare(queue[parentPos], element)) {
                queue[pos] = queue[parentPos];
                queue[parentPos] = element;
                pos = parentPos;
            }
            else {
                break;
            }
        }
    }
    /**
     * Get and remove the first element in the queue
     * @return The first element
     */
    pop() {
        let queue = this._queue;
        let compare = this._comparator;
        if (this._tailPos === 0)
            return null;
        let headNode = queue[0];
        let tail = queue[this._tailPos - 1];
        let pos = 0;
        let left = pos * 2 + 1;
        let right = left + 1;
        queue[pos] = tail;
        this._tailPos--;
        while (left < this._tailPos) {
            if (right < this._tailPos && compare(queue[left], queue[right]) && compare(queue[pos], queue[right])) {
                queue[pos] = queue[right];
                queue[right] = tail;
                pos = right;
            }
            else if (compare(queue[pos], queue[left])) {
                queue[pos] = queue[left];
                queue[left] = tail;
                pos = left;
            }
            else {
                break;
            }
            left = pos * 2 + 1;
            right = left + 1;
        }
        return headNode;
    }
    /**
     * Get but not remove the first element in the queue
     * @return The first element
     */
    peek() {
        if (this._tailPos === 0)
            return null;
        return this._queue[0];
    }
}
exports.PriorityQueue = PriorityQueue;
function createPriorityQueue(comparator) {
    return new PriorityQueue(comparator);
}
exports.createPriorityQueue = createPriorityQueue;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpb3JpdHlRdWV1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL2xpYi9wcmlvcml0eVF1ZXVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0dBRUc7QUFDSDtJQUtJLFlBQVksVUFBb0I7UUFtR2hDLHVCQUFrQixHQUFHLFVBQVUsQ0FBUyxFQUFFLENBQVM7WUFDL0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pCLENBQUMsQ0FBQztRQXBHRSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFHRCxJQUFJLENBQUMsVUFBb0I7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUU3RixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSTtRQUNBLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLE9BQW1DO1FBQ3JDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDeEIsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUUvQixLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBRWpDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBRTVCLE9BQU8sR0FBRyxHQUFHLENBQUMsRUFBRTtZQUNaLElBQUksU0FBUyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFH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