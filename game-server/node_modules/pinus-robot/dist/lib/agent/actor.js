"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vm = require("vm");
const events_1 = require("events");
const monitor = require("../monitor/monitor");
const path = require("path");
const logging_1 = require("../common/logging");
class Actor extends events_1.EventEmitter {
    constructor(conf, aid) {
        super();
        this.log = logging_1.logging;
        this.id = aid;
        if (conf.script) {
            this.script = conf.script;
        }
        else {
            if (path.isAbsolute(conf.scriptFile)) {
                this.script = `require("${conf.scriptFile}").default(actor);`;
            }
            else {
                this.script = `require("${path.join(process.cwd(), conf.scriptFile)}").default(actor);`;
            }
        }
        console.log('runScript ', this.script);
        this.on('start', (action, reqId) => {
            monitor.beginTime(action, this.id, reqId);
        });
        this.on('end', (action, reqId) => {
            monitor.endTime(action, this.id, reqId);
        });
        this.on('incr', function (action) {
            monitor.incr(action);
        });
        this.on('decr', function (action) {
            monitor.decr(action);
        });
    }
    run() {
        try {
            let initSandbox = {
                console: console,
                require: require,
                actor: this,
                setTimeout: setTimeout,
                clearTimeout: clearTimeout,
                setInterval: setInterval,
                clearInterval: clearInterval,
                global: global,
                process: process
            };
            let context = vm.createContext(initSandbox);
            vm.runInContext(this.script, context);
        }
        catch (ex) {
            this.emit('error', ex.stack);
        }
    }
    /**
     * clear data
     *
     */
    reset() {
        monitor.clear();
    }
    /**
     * wrap setTimeout
     *
     *@param {Function} fn
     *@param {Number} time
     */
    later(fn, time) {
        if (time > 0 && typeof (fn) === 'function') {
            return setTimeout(fn, time);
        }
    }
    /**
     * wrap setInterval
     * when time is Array, the interval time is thd random number
     * between then
     *
     *@param {Function} Fn
     *@param {Number} time
     */
    interval(Fn, time) {
        let fn = arguments[0];
        let self = this;
        switch (typeof (time)) {
            case 'number':
                if (arguments[1] > 0)
                    return setInterval(fn, arguments[1]);
                break;
            case 'object':
                let start = time[0], end = time[1];
                let newTime = Math.round(Math.random() * (end - start) + start);
                return setTimeout(function () { fn(), self.interval(fn, newTime); }, newTime);
            default:
                self.log.error('wrong argument');
                return;
        }
    }
    /**
     *wrap clearTimeout
     *
     * @param {Number} timerId
     *
     */
    clean(timerId) {
        clearTimeout(timerId);
    }
}
exports.Actor = Actor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvYWdlbnQvYWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx5QkFBMkI7QUFDM0IsbUNBQXNDO0FBQ3RDLDhDQUFnRDtBQUVoRCw2QkFBK0I7QUFDL0IsK0NBQW9EO0FBV3BELFdBQW1CLFNBQVEscUJBQVk7SUFJckMsWUFBWSxJQUFjLEVBQUUsR0FBVztRQUNyQyxLQUFLLEVBQUUsQ0FBQztRQUZWLFFBQUcsR0FBVyxpQkFBTyxDQUFDO1FBR3BCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDO1FBQ2QsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQzNCO2FBQ0k7WUFDSixJQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUNwQyxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVksSUFBSSxDQUFDLFVBQVUsb0JBQW9CLENBQUM7YUFDOUQ7aUJBQ0k7Z0JBQ0osSUFBSSxDQUFDLE1BQU0sR0FBRyxZQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsb0JBQW9CLENBQUM7YUFDekY7U0FDRDtRQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQWMsRUFBRSxLQUFhLEVBQUUsRUFBRTtZQUNqRCxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzVDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxN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