"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let CountDownLatch = require('../../lib/util/countDownLatch');
// import { describe, it } from "mocha-typescript"
let cbCreator = (function () {
    let count = 0;
    return {
        callback: function () {
            count++;
        },
        getCount: function () {
            return count;
        },
        count: count
    };
})();
describe('countdown latch test', function () {
    let countDownLatch1;
    let countDownLatch2;
    describe('#count down', function () {
        it('should invoke the callback after the done method was invoked the specified times', function (done) {
            let n = 3, doneCount = 0;
            let cdl = CountDownLatch.createCountDownLatch(n, function () {
                doneCount.should.equal(n);
                done();
            });
            for (let i = 0; i < n; i++) {
                doneCount++;
                cdl.done();
            }
        });
        it('should throw exception if pass a negative or zero to the create method', function () {
            (function () {
                CountDownLatch.createCountDownLatch(-1, function () { });
            }).should.throw();
            (function () {
                CountDownLatch.createCountDownLatch(0, function () { });
            }).should.throw();
        });
        it('should throw exception if pass illegal cb to the create method', function () {
            (function () {
                CountDownLatch.createCountDownLatch(1, null);
            }).should.throw();
        });
        it('should throw exception if try to invoke done metho of a latch that has fired cb', function () {
            let n = 3;
            let cdl = CountDownLatch.createCountDownLatch(n, function () { });
            for (let i = 0; i < n; i++) {
                cdl.done();
            }
            (function () {
                cdl.done();
            }).should.throw();
        });
        it('should invoke the callback if timeout', function () {
            let n = 3;
            let cdl = CountDownLatch.createCountDownLatch(n, { timeout: 3000 }, function (isTimeout) {
                isTimeout.should.equal(true);
            });
            for (let i = 0; i < n - 1; i++) {
                cdl.done();
            }
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291bnREb3duTGF0Y2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90ZXN0L3V0aWwvY291bnREb3duTGF0Y2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLGNBQWMsR0FBRyxPQUFPLENBQUMsK0JBQStCLENBQUMsQ0FBQztBQUU5RCxrREFBa0Q7QUFFbEQsSUFBSSxTQUFTLEdBQUcsQ0FBQztJQUNmLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUVkLE9BQU87UUFDTCxRQUFRLEVBQUU7WUFDUixLQUFLLEVBQUUsQ0FBQztRQUNWLENBQUM7UUFDRCxRQUFRLEVBQUU7WUFDUixPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFDRCxLQUFLLEVBQUUsS0FBSztLQUNiLENBQUM7QUFDSixDQUFDLENBQUMsRUFBRSxDQUFDO0FBRUwsUUFBUSxDQUFDLHNCQUFzQixFQUFFO0lBQy9CLElBQUksZUFBZSxDQUFDO0lBQ3BCLElBQUksZUFBZSxDQUFDO0lBRXBCLFFBQVEsQ0FBQyxhQUFhLEVBQUU7UUFDdEIsRUFBRSxDQUFDLGtGQUFrRixFQUFFLFVBQVUsSUFBZTtZQUM5RyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsQ0FBQztZQUN6QixJQUFJLEdBQUcsR0FBRyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxFQUFFO2dCQUMvQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxFQUFFLENBQUM7WUFDVCxDQUFDLENBQUMsQ0FBQztZQUVILEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFCLFNBQVMsRUFBRSxDQUFDO2dCQUNaLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNaO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsd0VBQXdFLEVBQUU7WUFDM0UsQ0FBQztnQkFDQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUMzRCxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7WUFFbEIsQ0FBQztnQkFDQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7WUFDMUQsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLGdFQUFnRSxFQUFFO1lBQ25FLENBQUM7Z0JBQ0MsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUMvQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsaUZBQWlGLEVBQUU7WUFDcEYsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ1YsSUFBSSxHQUFHLEdBQUcsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUMsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO1lBRWxFLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNaO1lBRUQsQ0FBQztnQkFDQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDYixDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsdUNBQXVDLEVBQUU7WUFDMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ1YsSUFBSSxHQUFHLEdBQUcsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLFNBQWtCO2dCQUM5RixTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUMsQ0FBQztZQUVILEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUM5QixHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDWjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBRUwsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyJ9